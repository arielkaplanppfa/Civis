-- Enter your SQL here.
/*
Bucket 1) Single positive payment gift -> join to payment and opp amount captures final amount
Bucket 2) multiple positive payment gifts -> collapse on refunded transaction id to capture refunds, then the payment amount is final amount (Non-bookable) --High Touch Record type?
Bucket 3) bookable pledges
Bucket4) credits
*/

/*
6/28/23 Current Issues:
Bookable flag not migrated to NPSP so suppression doesnt work
Golden Opps uses archive records, not available to NPSP
Records that have been modified after the data cut
Updates to Opps on 6/16 changes some amounts to > 0
Missing Gifts in NPSP, prior to 2020 example Mary E Mower 2019 giving
*/

drop table if exists ppfa_golden.golden_opportunities_npsp cascade;

Create temporary table bucket as 
with bucket_temp as ( 
 select opp.id as opp_id, opp.bookable, count(payment.id) as payments
    from  npsp_sfdc.opportunity_v opp
    join  npsp_sfdc.opppayment_v payment  on opp.id =  payment.opportunity
    where ( length(payment.originalpayment) = 0 or payment.originalpayment is null)  and payment.paid is true and payment.payment_amount > 0
    group by 1,2)
select opp_id, 
CASE WHEN bookable is true then 'Bookable Gift'
     WHEN bookable is false and payments = 1 then 'Single Payment Gifts'
     When bookable is false and payments > 1 then 'Multi-payment Gifts'
     Else 'Other' end as Bucket
from bucket_temp;


Create temporary table refunds as 
(
    select OriginalPayment, sum(payment_amount) as refund_amount, count(id) as refund_number
    from  npsp_sfdc.opppayment_v payment
    where ( length(payment.originalpayment) > 0 or payment.originalpayment is not null )
    group by 1 
);

---Table for has_soft_credit field
  CREATE TEMPORARY TABLE soft_credit_gifts as 
  SELECT DISTINCT coalesce(opportunity, payment) as record_id
  FROM npsp_sfdc.credit_v;


CREATE TEMPORARY TABLE opps_temp
  (--87 fields
     record_id                        VARCHAR(18) DEFAULT NULL -- NPSP CHANGE
     ,parent_id                       VARCHAR(18) DEFAULT NULL -- NPSP CHANGE   --ALERT THIS CHANGE
     ,ppid                            VARCHAR(30)
     ,npsp_accountid                  VARCHAR(18) DEFAULT NULL --NPSP CHANGE
     ,npsp_contactid                  VARCHAR(18) DEFAULT NULL --NPSP CHANGE 
     ,closedate                       DATE DEFAULT NULL
     ,deposit_date                    DATE DEFAULT NULL
     ,datepulled                      DATE -- AK 6/24/23 What is this?
     ,amount                          DECIMAL(38, 2) DEFAULT NULL
     ,source                          VARCHAR(25) NOT NULL --NPSP CHANGE (Data Source originally)
     ,record_affiliate_number            VARCHAR(100) DEFAULT NULL --NPSP CHANGE  --ALERT THIS CHANGE opp to record
     ,channel                         VARCHAR(30) DEFAULT NULL
     ,channel_group                   VARCHAR(10) DEFAULT NULL
     ,payment_method                  VARCHAR(30)--NPSP CHANGE (payment_subtype)
     ,payment_method_detail           VARCHAR(150) DEFAULT NULL --ALERT THIS CHANGE
     ,credit_card_issuer              VARCHAR(20)  DEFAULT NULL -- ALERT THIS CHANGE
     ,is_sustainer                    VARCHAR(7) DEFAULT NULL
     ,contactscontributionid          VARCHAR(50) DEFAULT NULL
     ,contactsrecurringcontributionid VARCHAR(50) DEFAULT NULL
     ,createdbyid                     VARCHAR(18) DEFAULT NULL
     ,lastmodifiedbyid                VARCHAR(18) DEFAULT NULL
     ,source_code                     VARCHAR(150) DEFAULT NULL
     ,original_source_code            VARCHAR(25) DEFAULT NULL
     ,pledge_number                   VARCHAR(150) DEFAULT NULL
     ,stage                           VARCHAR(150) DEFAULT NULL --NPSP CHANGE 
     ,archive_flag                    BOOLEAN DEFAULT NULL --NPSP CHANGE (Rc_giving__archive_flag varchar)
     ,bookable                        BOOLEAN DEFAULT NULL  --NPSP CHANGE (varchar)
     ,gau_credit_code                 VARCHAR(30) DEFAULT NULL
     ,gau_debit_code                  VARCHAR(50) DEFAULT NULL
     ,gift_type                       VARCHAR(80) DEFAULT NULL  --NPSP CHANGE (recordtype)
     ,pass_through                    VARCHAR(10) DEFAULT NULL  --NPSP CHANGE(is_pass_through INT)
     ,cfp_shareable                   BOOLEAN DEFAULT NULL  --NPSP CHANGE(varchar)
     ,is_local                        BOOLEAN DEFAULT false
     ,entity                          VARCHAR(3) DEFAULT NULL
     ,office                          VARCHAR(41) DEFAULT NULL
     ,business_unit                   VARCHAR(19) DEFAULT NULL
     ,group_code                      VARCHAR(21) DEFAULT NULL
     ,campaign_code                   VARCHAR(25) DEFAULT NULL
     ,technique                       VARCHAR(25) DEFAULT NULL  -- added via case 165733
     ,fiscal_month                    VARCHAR(2) DEFAULT NULL
     ,fiscal_year                     VARCHAR(42) DEFAULT NULL
     ,first_gift_natl_c3              BOOLEAN DEFAULT FALSE  --NPSP CHANGE (varchar)
     ,first_gift_natl_c4              BOOLEAN DEFAULT FALSE  --NPSP CHANGE (varchar)
     ,donor_c3_affil_number           VARCHAR(22) DEFAULT NULL
     ,donor_c4_affil_number           VARCHAR(23) DEFAULT NULL
     ,adjusted                        BOOLEAN DEFAULT FALSE  --NPSP CHANGE (varchar)
     ,giving_vehicle                  BOOLEAN DEFAULT FALSE   --NPSPS CHANGE(IsGivingVehicle varchAr)
     ,credit_type                     VARCHAR(43)
     ,giving_level_pre_gift           VARCHAR(24) DEFAULT NULL
     ,opportunity_number              VARCHAR(20)
     ,reportable_revenue              BOOLEAN --NPSP CHANGE (varchar)
     ,has_soft_credit                 BOOLEAN default false
     ,gau_credit_code_description     VARCHAR(150)
     ,gau_credit_code_category        VARCHAR(25)
     ,gl_entity                       VARCHAR(15)
     ,dept                            VARCHAR(20)
     ,sub_dept                        VARCHAR(20)
     ,contacts_onlineform_id          BIGINT
     ,onlineform_name                 VARCHAR(200)
     ,code_id                         BIGINT
     ,code_name                       VARCHAR(150)
     ,code_org                        VARCHAR(30)
     ,code_date                       DATE
     ,marketing_campaign              VARCHAR(50)
     ,ask_type                        VARCHAR(50)
     ,misc                            VARCHAR(30)
     ,site                            VARCHAR(15)
     ,site_type                       VARCHAR(15)
     ,cc_exp_date                     DATE
     ,rownm_byppid                    BIGINT
     ,rownm_byppid_desc               BIGINT
     ,rownm_channel_group             BIGINT
     ,f_or_l_hpc                      VARCHAR(1)-- f_or_l_hpc
     ,f_or_l_sus                      VARCHAR(1)
     ,rownm_sc_sus                    BIGINT
     ,sc_source_code                  VARCHAR(20)
     ,sc_tax_status                   VARCHAR(2)
     ,sc_tax_status_desc              VARCHAR(10)
     ,sc_office                       VARCHAR(2)
     ,sc_office_desc                  VARCHAR(100)
     ,sc_program                      VARCHAR(1)
     ,sc_program_desc                 VARCHAR(50)
     ,sc_restriction                  VARCHAR(1)
     ,sc_restriction_desc             VARCHAR(20)
     ,sc_channel                      VARCHAR(1)
     ,sc_channel_desc                 VARCHAR(30)
     ,sc_calender_month               VARCHAR(2)
     ,sc_calendar_year                VARCHAR(4)
     ,record_last_updated             timestamp
     ,parent_last_updated             timestamp
  ); 

/* 
-- Giving Vehicle Preferences
drop table if exists akaplan.rc_bios__preference_vehicle;
create table akaplan.rc_bios__preference_vehicle as 
( select distinct rc_bios__account from rounddata.rc_bios__preference where delete_flag <> 'Y' and rc_bios__active ilike 'true' and rc_bios__subcategory = 'Giving Vehicle' );
 */


INSERT INTO opps_temp (  
 SELECT distinct 
	      payment.id                                                                                      as transaction_id  --rename? record_id?
	     ,opp.id                                                                                          as parent_transaction_id --rename? record_id?
	     ,null                                                                                          as ppid
           ,opp.accountid                                                                                     as npsp_accountid
         ,opp.contactid                                                                                     as npsp_contactid
	     ,payment.payment_date                                                                            as closedate
         ,CASE WHEN opp.pledge is true and opp.bookable is false THEN payment.deposit_date
               WHEN payment.Deposit_Date IS NOT NULL THEN payment.Deposit_Date
               ELSE payment.Adjusted_Deposit_Date END                                                       as deposit_date
         ,payment.Sync_Date                                                                                 as datepulled -- is this the right date?
         ,Case WHEN (payment.payment_amount + coalesce(r.refund_amount,0)) < 0 THEN 0 
               ELSE (payment.payment_amount + coalesce(r.refund_amount,0)) end                       as amount --sub in final amount
         ,b.bucket                                                                                          as data_source  --Sustainer?
         ,opp.Affiliate_Number                                                                              as opp_affiliate_number
         ,camp.sourcecode_channel_description                                                               as channel
         ,CASE 
          WHEN camp.sourcecode_channel_description  
          IN ( 'Broadcast Email', 'Social Media', 'Mobile', 'Peer to Peer', 'Web','Email')   THEN 'online' 
          ELSE 'offline' END                                                                                as channel_group
,payment.payment_method                                                                             as payment_method
,payment.external_processor_name                                                                           as  payment_method_detail
,payment.card_issuer as card_issuer
         ,CASE WHEN rd.id is not null and rd.online_gift is true THEN 'online'                                 --change to rd.online_gift 
               WHEN opp.online_Gift is true and opp.sustaining_gift is true THEN 'online'                                  --confirm this logic
               WHEN position('SUST C3 ONLINE' in opp.description) > 0 THEN 'online'
               WHEN position('SUST C4 ONLINE' in opp.description) > 0 THEN 'online'
               WHEN position('SUST  VOTES ONLINE' in opp.description) > 0 then 'online'
               WHEN opp.gau_credit_code like '1%4013' and length(opp.gau_credit_code) = 17                            ---AK 10/20/22 --Legacy GAU coding
               THEN 'offline'
               WHEN camp.name like '____W%' THEN 'online'                                                                  -- Change after transformation to Program code
               WHEN opp.online_Gift is false and opp.sustaining_gift is true THEN 'offline'
               WHEN rd.id is not null and rd.online_gift is false THEN 'offline'
               ELSE NULL END                                                                                as     is_sustainer
         ,Case WHEN opp.originator in ('Convio','EveryAction') THEN opp.Acquired_Batch_Sequence
               ELSE null end                                                                                as     contactscontributionid
         ,Case WHEN opp.originator in ('Convio','EveryAction') THEN opp.Online_Recurring_Gift_ID 
               ELSE null end                                                                                as     contactsrecurringcontributionid
         ,payment.createdbyid                                                                               as     createdbyid
         ,payment.lastmodifiedbyid                                                                          as     lastmodifiedbyid
         ,camp.name                                                                                         as     source_code
         ,rdcamp.name                                                                                       as     original_source_code
         ,CASE WHEN rd.id is not null and rd.online_gift is null THEN rd.giving_number                   
               ELSE  opp.Online_Recurring_Gift_ID  END                                                      as     pledge_number
         ,opp.stagename                                                                                     as     stage
         ,opp.archive                                                                                       as     archive_flag
         ,opp.bookable                                                                                      as     bookable
         ,payment.GAU_Credit_Code                                                                           as     gau_credit_code
         ,payment.gau_debit_code                                                                            as     gau_debit_code
         ,CASE When rt.developername = 'High Touch' then 'High Touch'
               When opp.pledge is true then 'Pledge Payment'
               else 'Donation Payment' end                                                                  as     gift_type  --is this necessary?
         ,CASE WHEN opp.gau_credit_code IN
               ('C325005','C325015','11000000000002340','11000000000002356','C340100TR422ONL') 
               THEN 'National' 
               WHEN opp.Pass_Through_Gift is true THEN 'Affiliate' ELSE null  END                           as     pass_through
         ,payment.CFP_Shareable                                                                             as     cfp_shareable
        ,--CASE WHEN camp.office_code not in (national codes) AND  opp.gau_credit_code NOT LIKE '%CFP%'
               --THEN 'Y' ELSE 'N' END   
               false                                                                                         AS     is_local    --NPSP CHANGE - need source code transformation
       /*,campaign.SourceCode_Tax_Status_Description AS entity
         ,campaign.sourceCode_Office_description AS office
         ,campaign.sourceCode_Business_Unit_Description    AS business_unit
         ,campaign.sourceCode_Activity_Group_Description AS group_code
         ,campaign.sourceCode_Campaign_Description       AS campaign_code
         ,campaign.sourcecode_effort_description as technique --added via case 165733 */
		 ,null as entity
		 ,null as office
		 ,null as business_unit
		 ,null as group_code
		 ,null as campaign_code
		 ,null as technique
         ,lpad(CASE-- WHEN opportunity.ppfa_fiscal_month IS NOT NULL THEN opportunity.ppfa_fiscal_month
               WHEN payment.adjusted_deposit_date IS NOT NULL THEN akaplan.ppfa_fiscal_month(payment.adjusted_deposit_date)::varchar
                ELSE akaplan.ppfa_fiscal_month(payment.deposit_date):: varchar END,2,'0'):: varchar   AS fiscal_month
         ,CASE --WHEN payment.Deposit_Fiscal_Year IS NOT NULL THEN payment.Deposit_Fiscal_Year --formula field?
               WHEN payment.adjusted_deposit_date IS NOT NULL THEN akaplan.ppfa_fiscal_year(payment.adjusted_deposit_date)
               ELSE akaplan.ppfa_fiscal_year(payment.deposit_date)  END                     AS fiscal_year
         ,CASE WHEN payment.id = (SELECT first_gift_id
                                  FROM npsp_reporting.first_gift_ids x
                                  WHERE x.accountid = opp.accountid and entity = 'C3'
                                 )
               THEN true
               ELSE false 
          END                                              AS First_Gift_Natl_c3
         ,CASE WHEN payment.id = (SELECT first_gift_id
                                  FROM npsp_reporting.first_gift_ids x
                                  WHERE x.accountid = opp.accountid and entity = 'C4'
                                     )
               THEN true
               ELSE false
          END                                            AS First_Gift_Natl_c4
         ,a.c3_affiliate_number                          AS Donor_c3_affil_number
         ,a.c4_affiliate_number                          AS Donor_C4_affil_number
         ,CASE WHEN payment.adjusted is true
               THEN true 
               ELSE false
          END                                            AS Adjusted
         /*,CASE WHEN vehicle.rc_bios__account IS NOT NULL
               THEN 'Y'
               ELSE 'N'
           END                                           AS IsGivingVehicle*/
		 ,false                                           as giving_vehicle
         ,'HARD'                                         AS Credit_Type
         ,NULL                                           AS Giving_level_pre_gift
         ,opp.Opportunity_Number         AS Opporunity_number
         ,true        AS reportable_revenue
         ,CASE WHEN scg.record_id IS NOT NULL THEN true
               ELSE false END       as has_soft_credit --put in when credits are put in
          ,null as gau_credit_code_description
          ,null as gau_credit_code_category
          ,null as gl_entity
          ,null as dept
          ,null as sub_dept
          ,null:: bigint as contacts_onlineform_id
          ,null as onlineform_name          
          ,null:: bigint code_id  
          ,null as code_name        
          ,null as code_org                
          ,null:: date as code_date   
          ,null as marketing_campaign 
          ,null as ask_type              
          ,null as misc                
          ,null as site
          ,null as site_type
          ,null:: date as cc_exp_date
          ,NULL::bigint as rownm_byPPID
          ,NULL::bigint as rownm_byPPID_desc
          ,NULL::bigint as rownm_channel_group
          ,NULL::varchar as f_or_l_hpc
          ,NULL::varchar as f_or_l_sus
          ,NULL::bigint as rownm_sc_sus
          ,null::varchar as sc_source_code
          ,null::varchar as sc_tax_status
          ,null::varchar as sc_tax_status_desc
          ,null::varchar as sc_office
          ,null::varchar as sc_office_desc
          ,null::varchar as sc_program
          ,null::varchar as sc_program_desc
          ,null::varchar as sc_restriction
          ,null::varchar as sc_restriction_desc
          ,null::varchar as sc_channel
          ,null::varchar as sc_channel_desc
          ,null::varchar as sc_calender_month
          ,null::varchar as sc_calendar_year
          ,payment.lastmodifieddate as record_last_modified
          ,opp.lastmodifieddate as parent_last_modified
from  bucket b
join      npsp_sfdc.opportunity_v opp  on opp.id = b.opp_id and b.bucket in ('Multi-payment Gifts', 'Single Payment Gifts')
join      npsp_sfdc.opppayment_v payment on payment.opportunity = opp.id and payment.paid is true and payment.payment_amount > 0 and  (length(payment.originalpayment)  =  0 or payment.originalpayment is null)
left join refunds r on r.OriginalPayment = payment.id 
left join npsp_sfdc.recordtype rt on opp.recordtypeid = rt.id
left join npsp_sfdc.campaign_v camp on opp.campaignid = camp.id -- change join to use source_code = unique_source_code when source codes are populated?
left join npsp_sfdc.general_accounting_unit_v gau on opp.gau_credit_code = gau.name 
left join npsp_sfdc.recurring_donation_v rd on opp.recurring_donation = rd.id
left join npsp_sfdc.campaign_v rdcamp on rd.Recurring_Donation_Campaign = rdcamp.id
left join npsp_sfdc.account_v a on opp.accountid = a.id
left join soft_credit_gifts scg on  payment.id  = scg.record_id
where opp.amount > 0 and (payment.payment_amount + coalesce(r.refund_amount,0)) > 0  --Sub in final amount
and (payment.ngoc_giving_id is not null or  opp.ngoc_giving_id is not null) --non-migrated records? remove for production
UNION
-------------------------------
--BOOKABLE
-------------------------------
SELECT distinct 
	      opp.id                                                                                    as transaction_id  --rename? record_id?
	     ,null                                                                                       as parent_transaction_id  --rename? record_id?
		 ,null                                                                                          as ppid
         ,opp.accountid                                                                                 as npsp_accountid
         ,opp.contactid                                                                                 as npsp_contactid
	     ,opp.closedate                                                                               as closedate
         ,CASE WHEN opp.adjusted is true then opp.adjusted_deposit_date
               ELSE opp.deposit_date              END                                                       as deposit_date
         ,opp.Sync_Date                                                                                 as datepulled -- is this the right date?
         ,opp.amount                                                                                    as amount
         ,b.bucket                                                                                      as data_source  --Sustainer?
         ,opp.Affiliate_Number                                                                          as affiliate_number
         ,camp.sourcecode_channel_description                                                           as channel
         ,CASE 
          WHEN camp.sourcecode_channel_description  
          IN ( 'Broadcast Email', 'Social Media', 'Mobile', 'Peer to Peer', 'Web','Email')  
          THEN 'online' 
          ELSE 'offline' END                                                                            as channel_group
         ,null::varchar  as payment_method --payment.payment_method                                                                             
         ,null::varchar  as  payment_method_detail --payment.external_processor_name                                                                           
         ,null::varchar  as card_issuer --payment.card_issuer a
         ,CASE WHEN rd.id is not null and rd.online_gift is true THEN 'online'                                 --change to rd.online_gift 
               WHEN opp.online_Gift is true and opp.sustaining_gift is true THEN 'online'                                  --confirm this logic
               WHEN position('SUST C3 ONLINE' in opp.description) > 0 THEN 'online'
               WHEN position('SUST C4 ONLINE' in opp.description) > 0 THEN 'online'
               WHEN position('SUST  VOTES ONLINE' in opp.description) > 0 then 'online'
               WHEN opp.gau_credit_code like '1%4013' and length(opp.gau_credit_code) = 17                 ---AK 10/20/22 --Legacy GAU coding
               THEN 'offline'
               WHEN camp.name like '____W%' THEN 'online'                                                                  -- Change after transformation to Program code
               WHEN opp.online_Gift is false and opp.sustaining_gift is true THEN 'offline'
               WHEN rd.id is not null and rd.online_gift is false THEN 'offline'
               ELSE NULL END                                                                            as     is_sustainer
         ,Case WHEN opp.originator in ('Convio','EveryAction') THEN opp.Acquired_Batch_Sequence
               ELSE null end                                                                            as     contactscontributionid
         ,Case WHEN opp.originator in ('Convio','EveryAction') THEN opp.Online_Recurring_Gift_ID 
               ELSE null end                                                                            as     contactsrecurringcontributionid
         ,opp.createdbyid                                                                               as     createdbyid
         ,opp.lastmodifiedbyid                                                                          as     lastmodifiedbyid
         ,camp.name                                                                                     as     source_code
         ,rdcamp.name                                                                                   as     original_source_code
         ,opp.Giving_Number                                                                             as     pledge_number
         ,opp.stagename                                                                                 as     stage
         ,opp.archive                                                                                   as     archive_flag
         ,opp.bookable                                                                                  as     bookable
         ,opp.GAU_Credit_Code                                                                           as     gau_credit_code
         ,opp.gau_debit_code                                                                            as     gau_debit_code
         ,CASE When rt.developername = 'High Touch' then 'High Touch'
               When opp.pledge is true then 'Pledge'
               else 'Donation' end                                                                      as     gift_type  --is this necessary?
         ,CASE WHEN opp.gau_credit_code IN
               ('C325005','C325015','11000000000002340','11000000000002356','C340100TR422ONL') 
               THEN 'National' 
               WHEN opp.Pass_Through_Gift is true THEN 'Affiliate' ELSE null  END                            as     pass_through
         ,opp.CFP_Shareable                                                                         as     cfp_shareable
        ,--CASE WHEN camp.office_code not in (national codes) AND  opp.gau_credit_code NOT LIKE '%CFP%'
               --THEN 'Y' ELSE 'N' END   
               false                                                                                     AS     is_local    --NPSP CHANGE - need source code transformation
                  /*,campaign.SourceCode_Tax_Status_Description AS entity
         ,campaign.sourceCode_Office_description AS office
         ,campaign.sourceCode_Business_Unit_Description    AS business_unit
         ,campaign.sourceCode_Activity_Group_Description AS group_code
         ,campaign.sourceCode_Campaign_Description       AS campaign_code
         ,campaign.sourcecode_effort_description as technique --added via case 165733*/
         ,null as entity
		 ,null as office
		 ,null as business_unit
		 ,null as group_code
		 ,null as campaign_code
		 ,null as technique
         ,lpad(CASE WHEN opp.ppfa_fiscal_month IS NOT NULL THEN opp.ppfa_fiscal_month:: varchar
                    WHEN opp.adjusted_deposit_date IS NOT NULL THEN akaplan.ppfa_fiscal_month(opp.adjusted_deposit_date):: varchar
                    ELSE akaplan.ppfa_fiscal_month(opp.deposit_date):: varchar END,2,'0'):: varchar      AS fiscal_month
         ,CASE WHEN opp.ppfa_fiscal_year IS NOT NULL THEN opp.ppfa_fiscal_year:: varchar
               WHEN opp.adjusted_deposit_date IS NOT NULL THEN akaplan.ppfa_fiscal_year(opp.adjusted_deposit_date)
               ELSE akaplan.ppfa_fiscal_year(opp.adjusted_deposit_date)
          END                                                                                           AS fiscal_year
         ,CASE WHEN opp.id = (SELECT first_gift_id
                                  FROM npsp_reporting.first_gift_ids x
                                  WHERE x.accountid = opp.accountid and entity = 'C3'
                                 )
               THEN true
               ELSE false 
          END                                              AS First_Gift_Natl_c3
         ,CASE WHEN opp.id = (SELECT first_gift_id
                                  FROM npsp_reporting.first_gift_ids x
                                  WHERE x.accountid = opp.accountid and entity = 'C4'
                                     )
               THEN true
               ELSE false
          END                                            AS First_Gift_Natl_c4
         ,a.c3_affiliate_number                          AS Donor_c3_affil_number
         ,a.c4_affiliate_number                          AS Donor_C4_affil_number
         ,CASE WHEN opp.adjusted is true THEN true 
               ELSE false  END                           AS Adjusted
         /*,CASE WHEN vehicle.rc_bios__account IS NOT NULL
               THEN 'Y'
               ELSE 'N'
           END                                           AS IsGivingVehicle*/ --Figure this out
		 ,false                                           as giving_vehicle
         ,'HARD'                                         AS Credit_Type
         ,NULL                                           AS Giving_level_pre_gift
         ,opp.Opportunity_Number          AS Opportunity_number
         ,true        AS reportable_revenue
         ,CASE WHEN scg.record_id IS NOT NULL THEN true
               ELSE false END       as has_soft_credit
          ,null as gau_credit_code_description
          ,null as gau_credit_code_category
          ,null as gl_entity
          ,null as dept
          ,null as sub_dept
          ,null:: bigint as contacts_onlineform_id
          ,null as onlineform_name          
          ,null:: bigint code_id  
          ,null as code_name        
          ,null as code_org                
          ,null:: date as code_date   
          ,null as marketing_campaign 
          ,null as ask_type              
          ,null as misc                
          ,null as site
          ,null as site_type
          ,null:: date as cc_exp_date
          ,NULL::bigint as rownm_byPPID
          ,NULL::bigint as rownm_byPPID_desc
          ,NULL::bigint as rownm_channel_group
          ,NULL::varchar as f_or_l_hpc
          ,NULL::varchar as f_or_l_sus
          ,NULL::bigint as rownm_sc_sus
          ,null::varchar as sc_source_code
          ,null::varchar as sc_tax_status
          ,null::varchar as sc_tax_status_desc
          ,null::varchar as sc_office
          ,null::varchar as sc_office_desc
          ,null::varchar as sc_program
          ,null::varchar as sc_program_desc
          ,null::varchar as sc_restriction
          ,null::varchar as sc_restriction_desc
          ,null::varchar as sc_channel
          ,null::varchar as sc_channel_desc
          ,null::varchar as sc_calender_month
          ,null::varchar as sc_calendar_year
          ,opp.lastmodifieddate as record_last_modified
          ,null:: timestamp as  parent_last_modified
from  bucket b
join      npsp_sfdc.opportunity_v opp  on opp.id = b.opp_id and b.bucket = 'Bookable Gift'
left join npsp_sfdc.recordtype rt on opp.recordtypeid = rt.id
left join npsp_sfdc.campaign_v camp on opp.campaignid = camp.id -- change join to use source_code = unique_source_code when source codes are populated?
left join npsp_sfdc.general_accounting_unit_v gau on opp.gau_credit_code = gau.name 
left join npsp_sfdc.recurring_donation_v rd on opp.recurring_donation = rd.id
left join npsp_sfdc.campaign_v rdcamp on rd.Recurring_Donation_Campaign = rdcamp.id
left join npsp_sfdc.account_v a on opp.accountid = a.id
left join soft_credit_gifts scg on  opp.id  = scg.record_id
where opp.amount > 0 
and ( opp.ngoc_giving_id is not null) --non-migrated records? remove for production
and opp.stagename in ('Active', 'Closed Won')
-----------------------------
----------CREDITS------------
-----------------------------
UNION
select distinct
credit.id as record_id
,coalesce(opportunity.id, payment.id) as parent_id
,null::varchar as ppid
,coalesce(credit.account, contact.accountid) as npsp_accountid
,credit.contact as npsp_contactid
,credit.credit_close_date as closedate
,CASE WHEN opportunity.adjusted is true THEN opportunity.adjusted_deposit_date
      WHEN opportunity.adjusted is false THEN opportunity.deposit_date
      WHEN payment.Deposit_Date IS NOT NULL THEN payment.Deposit_Date
      ELSE payment.Adjusted_Deposit_Date  end as deposit_date
,coalesce(opportunity.sync_date, payment_opp.sync_date) as sync_date
,credit.amount as amount
,'Credits' as data_source
,CASE WHEN credit.affiliate_number is not null then credit.affiliate_number
      WHEN credit.entity = 'C3' then account.c3_affiliate_number
      WHEN credit.entity is not null then account.c4_affiliate_number
      else null end  as affiliate_number 
,campaign.sourcecode_channel_description as channel
,CASE 
     WHEN campaign.sourcecode_channel_description IN ( 'Broadcast Email', 'Social Media', 'Mobile', 'Peer to Peer', 'Web','Email')   THEN 'online' 
     ELSE 'offline' END   as channel_group
,payment.payment_method                                                                             as payment_method
,payment.external_processor_name                                                                           as  payment_method_detail
,payment.card_issuer as card_issuer
,CASE WHEN rd.id is not null and rd.online_gift is true THEN 'online'                                
      WHEN payment_opp.online_Gift is true and payment_opp.sustaining_gift is true THEN 'online'      --confirm this logic
      WHEN position('SUST C3 ONLINE' in payment_opp.description) > 0 THEN 'online'
      WHEN position('SUST C4 ONLINE' in payment_opp.description) > 0 THEN 'online'
      WHEN position('SUST  VOTES ONLINE' in payment_opp.description) > 0 then 'online'
      WHEN payment_opp.gau_credit_code like '1%4013' and length(payment_opp.gau_credit_code) = 17     ---AK 10/20/22 --Legacy GAU coding
           THEN 'offline'
      WHEN campaign.name like '____W%' THEN 'online'                                                         -- Change after transformation to Program code
      WHEN payment_opp.online_Gift is false and payment_opp.sustaining_gift is true THEN 'offline'
      WHEN rd.id is not null and rd.online_gift is false THEN 'offline'
      ELSE NULL END as is_sustainer
,CASE WHEN payment_opp.originator in ('Convio','EveryAction') THEN payment_opp.Acquired_Batch_Sequence
               ELSE null end                                                                                as     contactscontributionid
,Case WHEN payment_opp.originator in ('Convio','EveryAction') THEN payment_opp.Online_Recurring_Gift_ID 
               ELSE null end                                                                                as     contactsrecurringcontributionid
,credit.createdbyid                                                                               as     createdbyid
,credit.lastmodifiedbyid                                                                          as     lastmodifiedbyid
,campaign.name                                                                                     as     source_code
,null:: varchar                                                                                   as     original_source_code
,CASE WHEN rd.id is not null and rd.online_gift is null THEN rd.giving_number                   
      ELSE  payment_opp.Online_Recurring_Gift_ID  END                                                      as     pledge_number
,coalesce(opportunity.stagename, payment_opp.stagename)                                            as stage
,credit.archive                                                                                    as archive_flag
,coalesce(opportunity.bookable,false)                                                              as     bookable
,credit.gau_credit_code                                                                            as gau_credit_code
,coalesce(opportunity.gau_debit_code, payment.gau_debit_code)                                      as gau_debit_code
,Soft_Credit_Type                                                                                  as gift_type
,CASE WHEN payment.gau_credit_code IN ('C325005','C325015','11000000000002340','11000000000002356','C340100TR422ONL') 
           THEN 'National' 
      WHEN payment_opp.Pass_Through_Gift is true THEN 'Affiliate' ELSE null  END                            as     pass_through
,credit.cfp_shareable as cfp_shareable
,false                                                                                     AS     is_local    --NPSP CHANGE - need source code transformation          
/*,campaign.SourceCode_Tax_Status_Description AS entity
,campaign.sourceCode_Office_description AS office
,campaign.sourceCode_Business_Unit_Description    AS business_unit
,campaign.sourceCode_Activity_Group_Description AS group_code
,campaign.sourceCode_Campaign_Description       AS campaign_code
,campaign.sourcecode_effort_description as technique --added via case 165733*/
,null as entity
,null as office
,null as business_unit
,null as group_code
,null as campaign_code
,null as technique
,lpad(Coalesce(opportunity.ppfa_fiscal_month:: varchar, 
          akaplan.ppfa_fiscal_month(opportunity.adjusted_deposit_date):: varchar,
          akaplan.ppfa_fiscal_month(opportunity.deposit_date):: varchar,  
          payment_opp.ppfa_fiscal_month:: varchar,
          akaplan.ppfa_fiscal_month(payment_opp.adjusted_deposit_date):: varchar,
          akaplan.ppfa_fiscal_month(payment_opp.deposit_date):: varchar,
          akaplan.ppfa_fiscal_month(credit.credit_close_date):: varchar ),2,'0') as fiscal_month
,Coalesce(opportunity.ppfa_fiscal_year, 
          akaplan.ppfa_fiscal_year(opportunity.adjusted_deposit_date):: varchar,
          akaplan.ppfa_fiscal_year(opportunity.deposit_date):: varchar,  
          payment_opp.ppfa_fiscal_year,
          akaplan.ppfa_fiscal_year(payment_opp.adjusted_deposit_date):: varchar,
          akaplan.ppfa_fiscal_year(payment_opp.deposit_date):: varchar,
          akaplan.ppfa_fiscal_year(credit.credit_close_date):: varchar ) as fiscal_year
,CASE WHEN credit.id = (SELECT first_gift_id
                     FROM npsp_reporting.first_gift_ids x
                     WHERE x.accountid = coalesce(credit.account, contact.accountid) and entity = 'C3' )
                     THEN true
                     ELSE false END                                              AS First_Gift_Natl_c3
,CASE WHEN credit.id = (SELECT first_gift_id
                     FROM npsp_reporting.first_gift_ids x
                     WHERE x.accountid = coalesce(credit.account, contact.accountid) and entity = 'C4')
                     THEN true
                     ELSE false END                                              AS First_Gift_Natl_c4
,account.c3_affiliate_number                                                       AS Donor_c3_affil_number
,account.c4_affiliate_number                                                      AS Donor_C4_affil_number
,CASE WHEN coalesce(opportunity.adjusted, payment_opp.adjusted) is true THEN true 
      ELSE false  END                                                             AS Adjusted
/*,CASE WHEN vehicle.rc_bios__account IS NOT NULL
             THEN 'Y' ELSE 'N' END                                           AS IsGivingVehicle  */ --Figure this out
,false                                           as giving_vehicle
,'SOFT'  as credit_type
,NULL                                           AS Giving_level_pre_gift
,coalesce(opportunity.Opportunity_Number, payment_opp.opportunity_number)          AS Opportunity_number
,false                                                                             as reportable_revenue
,false as has_soft_credit
,null as gau_credit_code_description
,null as gau_credit_code_category
,null as gl_entity
,null as dept
,null as sub_dept
,null:: bigint as contacts_onlineform_id
,null as onlineform_name          
,null:: bigint code_id  
,null as code_name        
,null as code_org                
,null:: date as code_date   
,null as marketing_campaign 
,null as ask_type              
,null as misc                
,null as site
,null as site_type
,null:: date as cc_exp_date
,NULL::bigint as rownm_byPPID
,NULL::bigint as rownm_byPPID_desc
,NULL::bigint as rownm_channel_group
,NULL::varchar as f_or_l_hpc
,NULL::varchar as f_or_l_sus
,NULL::bigint as rownm_sc_sus
,null::varchar as sc_source_code
,null::varchar as sc_tax_status
,null::varchar as sc_tax_status_desc
,null::varchar as sc_office
,null::varchar as sc_office_desc
,null::varchar as sc_program
,null::varchar as sc_program_desc
,null::varchar as sc_restriction
,null::varchar as sc_restriction_desc
,null::varchar as sc_channel
,null::varchar as sc_channel_desc
,null::varchar as sc_calender_month
,null::varchar as sc_calendar_year
,credit.lastmodifieddate as record_last_modified
,coalesce(opportunity.lastmodifieddate, payment_opp.lastmodifieddate) as  parent_last_modified
from npsp_sfdc.credit_v credit
left join npsp_sfdc.opppayment_v payment on credit.payment = payment.id
left join npsp_sfdc.opportunity_v payment_opp on payment.opportunity = payment_opp.id
left join npsp_sfdc.recurring_donation_v rd on payment_opp.recurring_donation = rd.id
left join npsp_sfdc.opportunity_v opportunity on credit.opportunity = opportunity.id
left join npsp_sfdc.contact_v contact on credit.contact = contact.id
left join npsp_sfdc.campaign_v campaign on coalesce(opportunity.campaignid, payment_opp.campaignid) = campaign.id
left join npsp_sfdc.account_v account on coalesce(contact.accountid, credit.account) = account.id
);


update opps_temp
set 
 sc_source_code = new_source_code
,sc_tax_status = new_tax_status
,sc_tax_status_desc = new_tax_status_description
,sc_office = new_office
,sc_office_desc = new_office_description
,sc_program = new_program
,sc_program_desc = new_program_description
,sc_restriction = new_restriction
,sc_restriction_desc = new_restriction_description
,sc_channel = new_channel
,sc_channel_desc = new_channel_description
,sc_calender_month = case when cm = 'A' then '10':: varchar
                          when cm = 'B' then '11':: varchar
                          when cm = 'C' then '12':: varchar else cm::varchar end 
,sc_calendar_year = cy_description
from mss.master_source_code_translator  new_sc
where new_sc.current_source_code = opps_temp.source_code;

--mss.new_source_code_base_national

Create table ppfa_golden.golden_opportunities_npsp as (select * from opps_temp);