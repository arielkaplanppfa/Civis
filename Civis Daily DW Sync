version: '2.0'
workflow:
  credential_id: &credential_id 29547
  remote_host_id: &remote_host_id 174
  default_sql: &default_sql
    remote_host_id: *remote_host_id
    credential_id: *credential_id

  
  tasks:

    # insert_into_job_history:
    #   action: civis.scripts.sql
    #   input:
    #     <<: *default_sql
    #     sql: |
    #       INSERT INTO npsp_integration.job_history (jobid, lastrun,
    #       runstatus, notes)

    #       VALUES (13::INTEGER,(SELECT v_insert_timestamp FROM
    #       npsp_staging.stg_insert_timestamp),'started','Civis Aggregation
    #       Workflow has started');
    #   on-success:
    #     - npsp_first_gift_id
    
    
    npsp_first_gift_id:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 223962064
      on-success:
        - run_golden_opps
      on-error:
        - handle_errors


    run_golden_opps:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 10
      input:
        job_id: 219977409
      on-success:
        -  run_giving_summary
      on-error:
        - handle_errors
    
    
    run_giving_summary:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 237083252
      on-success:
        - run_account
      on-error:
        - handle_errors
    
    
    
    run_account:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 247055886
      on-success:
        - run_contact
      on-error:
        - handle_errors
    
    
    run_contact:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 247091610
      on-success:
        - run_campaign
      on-error:
        - handle_errors
    
    
    run_campaign:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 237061374
      on-success:
        - run_recurring_donations
      on-error:
        - handle_errors
    
    
    run_recurring_donations:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 237056580
      on-success:
        - run_attributes
      on-error:
        - handle_errors
    
    
    run_attributes:
      action: civis.run_job
      input:
        job_id: 237277355
      on-success:
        - populate_subledger
      on-error:
        - handle_errors
    
    populate_subledger:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 237486402
      on-success:
        - nightly_subledger
      on-error:
        - handle_errors
    
    
    nightly_subledger:
      action: civis.run_job
      retry:
        # Number of attempts, not including the first one.
        # A count of 3 means there are 4 attempts.
        count: 3
        # Delay between attempts in seconds
        delay: 5
      input:
        job_id: 237486273
      on-success:
        -  data_mart_rowcount    
      on-error:
        - handle_errors

    # update_job_history:
    #   action: civis.scripts.sql
    #   input:
    #     <<: *default_sql
    #     sql: |
    #       update npsp_integration.job_history

    #       set runstatus = 'complete', lastrun = current_timestamp, notes =
    #       'Civis Aggregation Workflow has completed successfully'

    #       where jobid = 13 and runstatus = 'started' and lastrun = (SELECT
    #       v_insert_timestamp FROM npsp_staging.stg_insert_timestamp);
    #   join: all
    #   on-success:
    #     - data_mart_rowcount
    
    handle_errors:
      action: civis.scripts.sql
      input:
        <<: *default_sql
        sql: |
          update npsp_integration.job_history

          set runstatus = 'failed', lastrun = current_timestamp, notes = 'Civis
          Aggregation Workflow has failed'

          where jobid = 13 and runstatus = 'started' and lastrun = (SELECT
          v_insert_timestamp FROM npsp_staging.stg_insert_timestamp);
      on-success:
        - fail_workflow
    
    
    data_mart_rowcount:
      action: civis.run_job
      join: all
      input:
        job_id: 239083880
      on-complete:
        - stage_table_rowcount
      

    stage_table_rowcount:
      action: civis.run_job
      input:
        job_id: 242706830


    fail_workflow:
        action: std.fail
        input:
            message: "The main task failed. Check the job step history for more details."

