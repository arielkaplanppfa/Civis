Drop table if exists ppfa_golden.staging_mailing_address;
create table ppfa_golden.staging_mailing_address as 
with temp as 
(Select i.resolved_id as "PPID", i.source_primary_key as "Source_Key", c.id as "address_id", c.rc_bios__street_line_1 as "street_1", c.rc_bios__street_line_2 as "Street_2", c.rc_bios__additional_line_1 as "Street_3", c.rc_bios__city as "city", c.rc_bios__state as "State", c.rc_bios__country as "Country", c.rc_bios__postal_code as "Zip", c.rc_bios__do_not_mail as "do_not_mail", c.rc_bios__type as "type", c.rc_bios__preferred_mailing as "Preferred_mailing", c.rc_bios__verified as "Verified", c.createddate as "Date",
CASE
WHEN c.rc_bios__preferred_mailing = 'true' and c.rc_bios__do_not_mail = 'false' and c.rc_bios__verified = 'true' THEN 1
WHEN c.rc_bios__preferred_mailing = 'true' and c.rc_bios__do_not_mail = 'false' and c.rc_bios__verified = 'false' THEN 2-- Preferred Address
WHEN c.rc_bios__preferred_mailing = 'true' and c.rc_bios__do_not_mail = 'true' THEN  3 -- Preferred Addresses unmailable
WHEN c.rc_bios__preferred_mailing = 'false' and c.rc_bios__do_not_mail = 'false' and c.rc_bios__verified = 'true' THEN 4 -- Active Addresses
WHEN c.rc_bios__preferred_mailing = 'false' and c.rc_bios__do_not_mail = 'false' THEN 5 -- Other Active Addresses 
WHEN c.rc_bios__preferred_mailing = 'false' and c.rc_bios__do_not_mail = 'true' THEN 99 -- Non-preferred Unmailable
ELSE 4
END as "Address_Rank", 'Contact Address' as "Source"
from ppfa_golden.current_customer_graph i 
join rounddata.rc_bios__contact_address c on i.source_primary_key = c.rc_bios__contact 
where c.delete_flag <> 'Y' and c.isdeleted = 'false' and c.rc_bios__active = 'true' 
and rc_bios__street_line_1 is not null -- Test suppression, why include these?
),
temptwo as (
Select i.resolved_id, i.source_primary_key , aa.id as "address_id", aa.rc_bios__street_line_1, aa.rc_bios__street_line_2, aa.rc_bios__additional_line_1, aa.rc_bios__city, aa.rc_bios__state, aa.rc_bios__country, aa.rc_bios__postal_code, aa.rc_bios__do_not_mail, aa.rc_bios__type, aa.rc_bios__preferred_shipping, aa.rc_bios__verified, aa.createddate,
CASE
WHEN aa.rc_bios__preferred_shipping = 'true' and aa.rc_bios__do_not_mail = 'false' and aa.rc_bios__verified = 'true' THEN 1
WHEN aa.rc_bios__preferred_shipping = 'true' and aa.rc_bios__do_not_mail = 'false' and aa.rc_bios__verified = 'false' THEN 2-- Preferred Address
WHEN aa.rc_bios__preferred_shipping = 'true' and aa.rc_bios__do_not_mail = 'true' THEN  3 -- Preferred Addresses unmailable
WHEN aa.rc_bios__preferred_shipping = 'false' and aa.rc_bios__do_not_mail = 'false' and aa.rc_bios__verified = 'true' THEN 4 -- Active Addresses
WHEN aa.rc_bios__preferred_shipping = 'false' and aa.rc_bios__do_not_mail = 'false' THEN 5 -- Other Active Addresses 
WHEN aa.rc_bios__preferred_shipping = 'false' and aa.rc_bios__do_not_mail = 'true' THEN 99 -- Non-preferred Unmailable
ELSE 4
END as "Address_Rank",  
'Account Address' as "Source"
from ppfa_golden.current_customer_graph i
join rounddata.civis_contact_match cm on i.source_primary_key = cm."contact guid"
join rounddata.rc_bios__account_address aa on cm."household id" = aa.rc_bios__account 
where aa.delete_flag <> 'Y' and aa.isdeleted = 'false' and aa.rc_bios__active = 'true'
and i.resolved_id not in (select ppid from temp) 
and rc_bios__street_line_1 is not null -- Test suppression, why include these?
),
vanone as(
select distinct resolved_id as "ppid", source_primary_key, a.contactsaddressid:: varchar as "Address_Id", a.addressline1 as "Street_line_1", a.addressline2, a.addressline3, a.city, a.state, a.countrycode, a.zip5||'-'||a.zip4 as "postal_code", 'false' as "do_not Mail", 'Home' as "type", 'true' as "Preferred_shipping", 'true' as "Verified", of.datemodified as "Date",'2':: integer   as "Address_Rank" , 'Van - Confirmed' as "Source"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contactsaddresses_mym a on g.source_primary_key = a.vanid
join vansync.ppfa_contactsonlineforms_mym of on a.vanid = of.vanid and upper(a.addressline1) = upper(of.submittedaddressline1)
where a.datesuppressed is null
), 
vantwo as (
select distinct resolved_id as "ppid", source_primary_key, a.contactsaddressid:: varchar as "Address_Id", a.addressline1 as "Street_line_1", a.addressline2 as "Street_line_2", a.addressline3 as "Street_line_3", a.city, a.state, a.countrycode, a.zip5||'-'||a.zip4 as "postal_code", 'false' as "do_not Mail", 'Home' as "type",'true' as "Preferred_shipping", 'false' as "Verified", a.datemodified as "Date",'4':: integer as "Address_rank",'Van - Unconfirmed' as "Source"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contactsaddresses_mym a on g.source_primary_key = a.vanid
where a.datesuppressed is null and a.addressline1 is not null and 
not exists (select 'x' from  vanone t where a.contactsaddressid = t.address_id )
UNION
select distinct resolved_id as "ppid", source_primary_key, a.contactsaddressid:: varchar as "Address_Id", a.streetno||' '||a.streetname as "Street_line_1", a.addressline2 as "Street_line_2", a.addressline3 as "Street_line_3", a.city, a.state, a.countrycode, a.zip5||'-'||a.zip4 as "postal_code", 'false' as "do_not Mail", 'Home' as "type",'true' as "Preferred_shipping", 'false' as "Verified", a.datemodified as "Date",'4':: integer as "Address_rank",'Van - Unconfirmed' as "Source"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contactsaddresses_mym a on g.source_primary_key = a.vanid
where a.datesuppressed is null and a.addressline1 is null and (a.vaddress is not null and a.streetno is not null and a.streetname is not null and a.city is not null and a.state is not null) and 
not exists (select 'x' from  vanone t where a.contactsaddressid = t.address_id )
), 
vanthree as(
select distinct resolved_id as "ppid", source_primary_key ,  aa.contactsonlineformid:: varchar as "Address_ID", aa.submittedaddressline1 as "Street_line_1",'' as "Street Line 2", '' as "Street Line 3", aa.submittedcity as "City", aa.submittedstateprovince as "state",'US' as "Country", aa.submittedpostalcode as "postal_code", 'false' as "do_not Mail", 'Home' as "type",'true' as "Preferred_shipping", 'false' as "Verified",  aa.datecreated as "Date",'5':: integer as "Address_rank",'Van - Bulk' as "Source"
from ppfa_golden.current_customer_graph gg 
join vansync.ppfa_contactsonlineforms_mym aa on gg.source_primary_key = aa.vanid
where aa.submittedaddressline1 is not null
order by ppid asc,date desc
),
tempthree as
(
select * from temp
UNION
select * from temptwo
Union 
select * from vanone
union
select * from vantwo
union
select * from vanthree
order by  ppid, source_key,Address_Rank asc, date desc
),
tempfour as (
select *, ROW_NUMBER () OVER ( PARTITION BY ppid ORDER BY Address_rank asc, date desc) as "golden_rank" from tempthree 
)
select * from tempfour
;

/* Gotta Work in the country translation */

Drop table if exists ppfa_golden.mailing_address;
Drop table if exists ppfa_golden.golden_mailing_address;
create table ppfa_golden.golden_mailing_address as 
(
select ppid, Source_Key, address_id, street_1, street_2, street_3, city, state, country, zip, do_not_mail,type, date, source, address_rank, golden_rank 
from ppfa_golden.staging_mailing_address where golden_rank = 1 order by ppid
);

alter table ppfa_golden.staging_mailing_address add column m_address_key varchar(256);

update ppfa_golden.staging_mailing_address set m_address_key = upper(replace(coalesce(street_1,'No Street_1'),' ','')||replace(coalesce(street_2,'No Street_2'),' ','')||replace(Coalesce(street_3,'No Street_3'),' ','')||replace(coalesce(city,'No City'), ' ','')||replace(coalesce(state,'No State'),' ','')||Coalesce(left(zip,5),'NoZip'))  ;


alter table ppfa_golden.golden_mailing_address add column m_address_key varchar(256);

update ppfa_golden.golden_mailing_address set m_address_key = upper(replace(coalesce(street_1,'No Street_1'),' ','')||replace(coalesce(street_2,'No Street_2'),' ','')||replace(Coalesce(street_3,'No Street_3'),' ','')||replace(coalesce(city,'No City'), ' ','')||replace(coalesce(state,'No State'),' ','')||Coalesce(left(zip,5),'NoZip'))  ;

/*
select resolved_id, source_primary_key, address_id, rc_bios__street_line_1, rc_bios__street_line_2, rc_bios__additional_line_1, rc_bios__city, rc_bios__state, rc_bios__country, rc_bios__postal_code, rc_bios__do_not_mail, rc_bios__type, createddate, source, address_rank, golden_rank 
from temp where golden_rank = 1 order by resolved_id, golden_rank asc*/

/*Van Side*/ -- All Home except user-defined work, false for opt out
/*
With temp as(
select distinct resolved_id as "ppid", source_primary_key,'Van - Confirmed' as "Source", a.contactsaddressid as "Address_Id", a.addressline1 as "Street_line_1", a.addressline2, a.addressline3, a.city, a.state, a.countrycode, a.zip5||'-'||a.zip4 as "postal_code", of.datemodified as "Date"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contactsaddresses_mym a on g.source_primary_key = a.vanid
join vansync.ppfa_contactsonlineforms_mym of on a.vanid = of.vanid and upper(a.addressline1) = upper(of.submittedaddressline1)
where a.datesuppressed is null
), temptwo as (
select resolved_id as "ppid", source_primary_key,'Van - Unconfirmed' as "Source", a.contactsaddressid as "Address_Id", a.addressline1 as "Street_line_1", a.addressline2 as "Street_line_2", a.addressline3 as "Street_line_3", a.city, a.state, a.countrycode, a.zip5||'-'||a.zip4 as "postal_code", a.datemodified as "Date"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contactsaddresses_mym a on g.source_primary_key = a.vanid
where a.datesuppressed is null and a.addressline1 is not null and 
not exists (select 'x' from  temp t where a.contactsaddressid = t.address_id )
), tempthree as(
select resolved_id as "ppid", source_primary_key , 'Van - Bulk' as "Source", aa.contactsonlineformid as "Address_ID", aa.submittedaddressline1 as "Street_line_1",'' as "Street Line 2", '' as "Street Line 3", aa.submittedcity as "City", aa.submittedstateprovince as "state",'country' as "Country", aa.submittedpostalcode as "postal_code", aa.datecreated as "Date"
from ppfa_golden.current_customer_graph gg 
join vansync.ppfa_contactsonlineforms_mym aa on gg.source_primary_key = aa.vanid
where aa.submittedaddressline1 is not null
order by ppid asc,date desc
)
select * from temp UNION select * from temptwo UNION select * from tempthree 
order by ppid, source, date desc*/