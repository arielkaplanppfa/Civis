drop table if exists rounddata.sustainer_gifts;

select distinct o.etl_id, o.id, o.accountid, o.rc_giving__parent pledgeid, o.pledge_number,p.opportunity_external_id as recurring_gift_id, o.closedate, o.final_amount, o.rc_giving__source_code, o.gau_credit_code,c.sourcecode_activity_type_code activity_type, c.sourcecode_campaign_code, o.rc_giving__payment_method, p.rc_giving__giving_amount, p.rc_giving__payment_frequency
,nvl(p.RC_GIVING__ANNIVERSARY_DATE,p.closedate) pledge_date, pm.id pmid, pm.RC_GIVING__CARD_NUMBER_LAST_4, pm.rc_giving__card_expiration_mon
,pm.rc_giving__card_expiration_yea, pm.namex, pm.RC_GIVING__PAYMENT_TYPE, p.stagename, p.rC_Giving__Payment_End_Date 
,case when p.rC_Giving__Is_Sustainer = 'true'
then 'offline'
when  b.STAGE_RC_PREFERENCES_2_CODE_VA in ('SUS NL C3 ONLINE','SUS NL C4 ONLINE','SUS NL VOTES ONLINE')  
then 'online'
end offline_online
into rounddata.sustainer_gifts
from rounddata.opportunity p
join rounddata.opportunity o on p.id = o.rc_giving__parent
join rounddata.campaign c on o.rc_giving__source_code = c.unique_source_code and c.delete_flag <> 'Y'
left join rounddata.rc_giving__payment_method pm on o.rc_giving__payment_method_sele = pm.id
left join rounddata.rc_connect__batch_upload b on p.id = b.RC_CONNECT__BATCH_UPLOAD_GIVIN
where 1=1
and (p.rC_Giving__Is_Sustainer = 'true'
or b.STAGE_RC_PREFERENCES_2_CODE_VA in ('SUS NL C3 ONLINE','SUS NL C4 ONLINE','SUS NL VOTES ONLINE'))
and o.rc_giving__transaction_type = 'Payment'
and o.stagename = 'Completed'
and o.closedate <= current_date
and (o.delete_flag <>'Y' OR o.rc_giving__archive_flag = 'true');