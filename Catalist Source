drop table if exists ppfa_golden.catalist_source;
create table ppfa_golden.catalist_source as (
select distinct resolved_id from ppfa_golden.current_customer_graph where resolved_id not like '001%' and resolved_id not like '003%'
);

ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN first_name varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN Middle_name  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN last_name  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN street  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN city  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN state  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN zip  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN email  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN phone  Varchar(1024);
ALTER TABLE  ppfa_golden.catalist_source ADD COLUMN birth_date  Date;

--Need to work in Not exists against the hight touch bucket for the others
drop table if exists ppfa_golden.catalist_high_touch;
create table ppfa_golden.catalist_high_touch as
(
select distinct g.resolved_id
from ppfa_golden.current_customer_graph g 
where exists (select 'x' from ppfa_golden.high_touch t where g.resolved_id = t.ppid and (giving_level = 'Major Donor' or planned_giving is not null) )
);

drop table if exists ppfa_golden.catalist_rd_only_clusters;
create table ppfa_golden.catalist_rd_only_clusters as
(
select distinct g.resolved_id from ppfa_golden.current_customer_graph g where source = 'round_data' 
minus 
select distinct g.resolved_id from ppfa_golden.current_customer_graph g where source = 'van'
);

drop table if exists ppfa_golden.catalist_van_only_clusters;
create table ppfa_golden.catalist_van_only_clusters as
(
select distinct g.resolved_id from ppfa_golden.current_customer_graph g where source = 'van' 
minus 
select distinct g.resolved_id from ppfa_golden.current_customer_graph g where source = 'round_data'
);

drop table if exists ppfa_golden.catalist_cross_clusters;
create table ppfa_golden.catalist_cross_clusters as
(
select distinct g.resolved_id from ppfa_golden.current_customer_graph g
where source in ('round_data','van')
group by resolved_id
having count(distinct source) >1
);


--firstnames
Update ppfa_golden.catalist_source  
set first_name = firstname 
from (select resolved_id, c.firstname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(firstname) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
where exists (select 'x' from ppfa_golden.catalist_high_touch t where g.resolved_id = t.resolved_id) and firstname is not null ) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set first_name = firstname 
from (select resolved_id, c.firstname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(firstname) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
where exists (select 'x' from ppfa_golden.catalist_rd_only_clusters t where g.resolved_id = t.resolved_id) and firstname is not null ) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set first_name = firstname 
from (select resolved_id, c.firstname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(firstname) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contacts_mym c on g.source_primary_key = c.vanid
where exists (select 'x' from ppfa_golden.catalist_van_only_clusters t where g.resolved_id = t.resolved_id) and firstname is not null) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set first_name = firstname 
from (select resolved_id, firstname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(firstname) desc) as "name_rank"
from (
select resolved_id, firstname
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
UNION
select resolved_id, firstname
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contacts_mym c on g.source_primary_key = c.vanid
)  g 
where exists (select 'x' from ppfa_golden.catalist_cross_clusters t where g.resolved_id = t.resolved_id) and firstname is not null) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

--Last Names
Update ppfa_golden.catalist_source  
set last_name = lastname 
from (select resolved_id, c.lastname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(lastname) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
where exists (select 'x' from ppfa_golden.catalist_high_touch t where g.resolved_id = t.resolved_id) and lastname is not null ) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set last_name = lastname
from (select resolved_id, c.lastname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(lastname) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
where exists (select 'x' from ppfa_golden.catalist_rd_only_clusters t where g.resolved_id = t.resolved_id) and lastname is not null ) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set last_name = lastname 
from (select resolved_id, c.lastname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(lastname) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contacts_mym c on g.source_primary_key = c.vanid
where exists (select 'x' from ppfa_golden.catalist_van_only_clusters t where g.resolved_id = t.resolved_id) and lastname is not null) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set last_name = lastname 
from (select resolved_id, lastname, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(lastname) desc) as "name_rank"
from (
select resolved_id, lastname
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
UNION
select resolved_id, lastname
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contacts_mym c on g.source_primary_key = c.vanid
)  g 
where exists (select 'x' from ppfa_golden.catalist_cross_clusters t where g.resolved_id = t.resolved_id) and lastname is not null) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

--Middle Names
Update ppfa_golden.catalist_source  
set middle_name = rc_bios__middle_name 
from (select resolved_id, c.rc_bios__middle_name, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(rc_bios__middle_name) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
where exists (select 'x' from ppfa_golden.catalist_high_touch t where g.resolved_id = t.resolved_id) and rc_bios__middle_name is not null ) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set middle_name = rc_bios__middle_name 
from (select resolved_id, c.rc_bios__middle_name, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(rc_bios__middle_name) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
where exists (select 'x' from ppfa_golden.catalist_rd_only_clusters t where g.resolved_id = t.resolved_id) and rc_bios__middle_name is not null ) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set middle_name = middlename 
from (select resolved_id, c.middlename, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(middlename) desc) as "name_rank"
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contacts_mym c on g.source_primary_key = c.vanid
where exists (select 'x' from ppfa_golden.catalist_van_only_clusters t where g.resolved_id = t.resolved_id) and middlename is not null) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

Update ppfa_golden.catalist_source  
set middle_name = middlename 
from (select resolved_id, middlename, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY length(middlename) desc) as "name_rank"
from (
select resolved_id, rc_bios__middle_name as "middlename"
from ppfa_golden.current_customer_graph g 
join rounddata.contact c on g.source_primary_key = c.id
UNION
select resolved_id, middlename 
from ppfa_golden.current_customer_graph g 
join vansync.ppfa_contacts_mym c on g.source_primary_key = c.vanid
)  g 
where exists (select 'x' from ppfa_golden.catalist_cross_clusters t where g.resolved_id = t.resolved_id) and middlename is not null) f 
where catalist_source.resolved_id = f.resolved_id and name_rank = 1 ;

--Address
Update ppfa_golden.catalist_source 
set street = coalesce(m.street_1,'')||' '||coalesce(m.street_2,'')||' '||coalesce(m.street_3,''), city = m.city, state = m.state, zip = m.zip
from ( select * from ppfa_golden.mailing_address) m where resolved_id = m.ppid;

--Phones
update ppfa_golden.catalist_source
set  phone = p.home_phone
from (select * from ppfa_golden.golden_phones ) p 
where catalist_source.resolved_id = p.resolved_id;

update ppfa_golden.catalist_source
set  phone = g.phone
from (select p.resolved_id, m.phone,  ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY preferredphone desc, datecreated desc) as "phone_rank" 
      from ppfa_golden.current_customer_graph p join vansync.ppfa_contactsphones_mym m on p.source_primary_key = m.vanid
       where datesuppressed is null) g 
where catalist_source.resolved_id = g.resolved_id
and catalist_source.phone is null and g.phone_rank = 1;


--Birthdates
update ppfa_golden.catalist_source
set birth_date = b.birthdate
from (
  select g.resolved_id, left(birthdate,11)::date as "birthdate",ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY createddate desc) as "birth_rank"  
  from ppfa_golden.current_customer_graph g join rounddata.contact m on g.source_primary_key = m.id
  where birthdate is not null
  ) b
where catalist_source.resolved_id = b.resolved_id
and catalist_source.birth_date is null and b.birth_rank = 1 ;

update ppfa_golden.catalist_source
set birth_date = b.birthdate
from (
  select g.resolved_id, left(dob,11)::date as "birthdate",ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY datecreated desc) as "birth_rank"  
  from ppfa_golden.current_customer_graph g join vansync.ppfa_contacts_mym m on g.source_primary_key = m.vanid
  where dob is not null
  ) b
where catalist_source.resolved_id = b.resolved_id
and catalist_source.birth_date is null and b.birth_rank = 1 ;


update ppfa_golden.catalist_source
set birth_date = b.birthdate
from (
  select g.resolved_id, to_date(rc_bios__birth_year,'YYYY') as "birthdate",ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY createddate desc) as "birth_rank"  
  from ppfa_golden.current_customer_graph g join rounddata.contact m on g.source_primary_key = m.id
  where rc_bios__birth_year is not null
  ) b
where catalist_source.resolved_id = b.resolved_id
and catalist_source.birth_date is null and b.birth_rank = 1 ;

-- emails
update ppfa_golden.catalist_source
set email = u.email
From (
  select g.resolved_id, e.email, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY datefirstread desc) as "email_rank"
  from ppfa_golden.current_customer_graph g join vansync.ppfa_contactsemailbatches_mym e on g.source_primary_key = e.vanid
  where datebounced is null ) u
  where catalist_source.resolved_id = u.resolved_id
  and u.email_rank = 1;
  
  
update ppfa_golden.catalist_source
set email = u.valuex
From (
  select g.resolved_id, c.valuex, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY createddate desc) as "email_rank"
  from  ppfa_golden.current_customer_graph g join rounddata.additional_contact_info c on g.source_primary_key = c.contact
  where typex = 'Email' and preferred = 'true'
  ) u
  where catalist_source.resolved_id = u.resolved_id
  and u.email_rank = 1 and catalist_source.email is null;
  
  update ppfa_golden.catalist_source
set email = u.valuex
From (
  select g.resolved_id, c.valuex, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY createddate desc) as "email_rank"
  from  ppfa_golden.current_customer_graph g join rounddata.additional_contact_info c on g.source_primary_key = c.contact
  where typex = 'Email' and preferred = 'false'
  ) u
  where catalist_source.resolved_id = u.resolved_id
  and u.email_rank = 1 and catalist_source.email is null;
  
  update ppfa_golden.catalist_source
set email = u.email
From (
  select g.resolved_id, e.email, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY datecreated desc) as "email_rank"
  from ppfa_golden.current_customer_graph g join vansync.ppfa_contactsemails_mym e on g.source_primary_key = e.vanid
  where datesuppressed is null ) u
  where catalist_source.resolved_id = u.resolved_id
  and u.email_rank = 1 and catalist_source.email is null;
  
  update ppfa_golden.catalist_source
set email = u.email
From (
  select g.resolved_id, e.email, ROW_NUMBER () OVER ( PARTITION BY resolved_id ORDER BY datecreated desc) as "email_rank"
  from ppfa_golden.current_customer_graph g join vansync.ppfa_contacts_mym e on g.source_primary_key = e.vanid
  where email is not null ) u
  where catalist_source.resolved_id = u.resolved_id
  and u.email_rank = 1 and catalist_source.email is null;
  

